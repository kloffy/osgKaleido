#ifndef OSGKALEIDO_POLYHEDRON_INCLUDED
#define OSGKALEIDO_POLYHEDRON_INCLUDED

#include <osgKaleido/Export>

#include <osg/Geometry>

namespace osgKaleido {

class OSGKALEIDO_EXPORT Polyhedron: public osg::Referenced
{
public:
	enum Faces
	{
		None          = 0,
		Triangular    = 1 << 0,
		Quadrilateral = 1 << 1,
		Pentagonal    = 1 << 2,
		Hexagonal     = 1 << 3,
		Heptagonal    = 1 << 4,
		Octagonal     = 1 << 5,
		Nonagonal     = 1 << 6,
		Decagonal     = 1 << 7,
		Hendecagonal  = 1 << 8,
		Dodecagonal   = 1 << 9,
		All           = ~None,
	};

	Polyhedron(std::string const& symbol);

protected:
	// Use reference counting.
	virtual ~Polyhedron(); 

private:
	std::string _symbol;
};

} // osgKaleido

#endif // OSGKALEIDO_POLYHEDRON_INCLUDED